"""
projekt_2.py: druhÃ½ projekt do Engeto Online Python Akademie

author = Bc. Gyorgyi Fucsekova Posztosova
email: posztosgyorgyi@seznam.cz 
"""
import random
import time

num_of_hits = [] # number of hits for each game
game_durations = [] # duration of each game in seconds
generated = [] # list of generated number for each game


def generate_unique_number():
    """Generates a unique 4 digit number wich do not start with 0 and each numbers do not repeat.
    """
    numbers = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
    generated_number = random.sample(numbers, 4)
    
    if generated_number[0] == 0 or len(generated_number) > len(set(generated_number)):
        generate_unique_number()
    else:
        generated.append(generated_number)
    return generated_number

def evaluate_guess(user_tip, generated_number):
    """Evaluates the guess against the generated number and returns number of Bulls and Cows.
    """
    bulls = 0
    cows = 0
    tip = [int(i) for i in str(user_tip)]

    for i in range(4):
        if tip[i] == generated_number[i]:
            bulls += 1
        elif tip[i] in generated_number:
            cows +=1
    return bulls, cows

def generate_statistics():
    """Generates statistics of all games in this running program.
    """
    print(f"""
Your game statistics are:
You played {len(num_of_hits)} games.
The shortest game you took {min(num_of_hits)} shots, 
the longest {max(num_of_hits)}.
You played {round(sum(game_durations))} seconds.
The shortest game you took {round(min(game_durations))} seconds, 
the longest {round(max(game_durations))}.
              """)

def play_game():
    """Plays the Bulls and Cows game.
    """
    start_time = time.time()
    all_tips = []
    generated_number = generate_unique_number()
    print(f"""
Hi there!
{'-' * 40}
I've generated a random 4 digit number for you.
Let's play a bulls and cows game.
{'-' * 40}
How? below are the rules:
Guesses a 4 digit number consisting of unique digits.
After each guess, you receive feedback in the form of the number of "bulls" and "cows".
A bull is a correct digit in the correct place.
A cow is a correct digit that is in my generated number, but in the wrong place.
The goal is to guess the correct number with the fewest number of attempts.
So let's go and good luck.
        """)
    
    while True:
        print("-" * 40)
        user_tip = input("Enter your guess:")
        first_digit = user_tip[0]
        
        if not user_tip.isdigit():
            print("Invalid input. Please enter only numbers.")
            continue
        elif (len(user_tip) != 4) or \
                (len(set(user_tip)) != 4) or \
                (first_digit == "0"):
            print("Invalid input. Please read the rules again and enter a new number.")
        elif user_tip in all_tips:
            print("You already used this number. Please enter a new one.")
            continue
        else:
            all_tips.append(user_tip)
            bulls, cows = evaluate_guess(user_tip, generated_number)
            print(f"""In your tip are {bulls} Bulls and {cows} Cows.""")
            
            if bulls == 4:
                end_time = time.time()
                num_of_hits.append(len(all_tips))
                game_length = end_time - start_time
                game_durations.append(game_length)
                print(f"""
Congratulations!!!!! Your tip is correct. 
It took you {len(all_tips)} shots and 
{round(game_length)} seconds to find the right number!
                        """)
                choice = input("""Do you want to play again? Press y.
Do you want to see your game statistics? Press s.
Do you want to quit game? Press any other button.""")
                
                if choice == "y" or choice == "Y":
                    play_game()
                elif choice == "s" or choice == "S":
                    generate_statistics()
                    choice_2 = input("""Do you wanna play again? Press y.
Do you wanna quit? Press any other button.""")
                    
                    if choice_2 == "y" or choice_2 == "Y":
                        play_game()
                    else:
                        print("Thank you for your game. See you soon.")
                        break
                else:
                    print("Thank you for your game. See you soon.")
                    break

if __name__ == "__main__":
    play_game()